name: CI
on:
  schedule:
  - cron: "0 13 * * 2"
jobs:
  build:
    env:
      VERSION_FILE: .github/.remote_versions
      GTOKEN: ${{ secrets.GITHUB_TOKEN }}
      DTOKEN: ${{ secrets.DOCKER_TOKEN }}
      DUSER: ${{ secrets.DOCKER_USERNAME }}
      HUBREPO: ${{ secrets.DOCKER_REPO }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    - name: Monitor
      run: |
        pip install --no-deps py-altdns
        pip show py-altdns > "${VERSION_FILE}"
    - name: Check changes
      id: check
      run: |
        if [ $(git status --porcelain=v1 2>/dev/null | wc -l) != "0" ]; then
            echo "::set-output name=result::changed"
        else
            echo "::set-output name=result::unchanged"
        fi
    - name: Commit and push
      if: steps.check.outputs.result == 'changed'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add "${VERSION_FILE}"
        git commit -m "Remote version change" -a
        git push "https://${GITHUB_ACTOR}:${GTOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD:${GITHUB_REF} --follow-tags
    - name: Dockerdeploy
      if: steps.check.outputs.result == 'changed' || github.event_name == 'workflow_dispatch'
      run: |
        docker login -u ${DUSER} -p ${DTOKEN}
        docker build . --file Dockerfile --tag ${DUSER}/${HUBREPO}:latest --tag ${DUSER}/${HUBREPO}:$(date +%s)
        docker push ${DUSER}/${HUBREPO}
